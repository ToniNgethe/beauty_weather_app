// Mocks generated by Mockito 5.1.0 from annotations
// in dvt_weather_app/test/data/bloc/weather/weather_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dvt_weather_app/data/models/weather_model.dart' as _i2;
import 'package:dvt_weather_app/data/repositories/weather_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeWeatherModel_0 extends _i1.Fake implements _i2.WeatherModel {}

/// A class which mocks [WeatherRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherRepository extends _i1.Mock implements _i3.WeatherRepository {
  MockWeatherRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.WeatherModel?> getCachedTodayWeather() =>
      (super.noSuchMethod(Invocation.method(#getCachedTodayWeather, []),
              returnValue: Future<_i2.WeatherModel?>.value())
          as _i4.Future<_i2.WeatherModel?>);
  @override
  _i4.Future<List<_i2.WeatherModel>?> getCachedForeCastWeather() =>
      (super.noSuchMethod(Invocation.method(#getCachedForeCastWeather, []),
              returnValue: Future<List<_i2.WeatherModel>?>.value())
          as _i4.Future<List<_i2.WeatherModel>?>);
  @override
  _i4.Future<_i2.WeatherModel> getTodayWeather(double? lat, double? long) =>
      (super.noSuchMethod(Invocation.method(#getTodayWeather, [lat, long]),
              returnValue:
                  Future<_i2.WeatherModel>.value(_FakeWeatherModel_0()))
          as _i4.Future<_i2.WeatherModel>);
  @override
  _i4.Future<List<_i2.WeatherModel>> getFiveDaysWeather(
          double? lat, double? lon) =>
      (super.noSuchMethod(Invocation.method(#getFiveDaysWeather, [lat, lon]),
              returnValue:
                  Future<List<_i2.WeatherModel>>.value(<_i2.WeatherModel>[]))
          as _i4.Future<List<_i2.WeatherModel>>);
  @override
  _i4.Future<dynamic> markWeatherAsFavourite() =>
      (super.noSuchMethod(Invocation.method(#markWeatherAsFavourite, []),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
  @override
  _i4.Future<List<_i2.WeatherModel>?> getAllFavWeather() =>
      (super.noSuchMethod(Invocation.method(#getAllFavWeather, []),
              returnValue: Future<List<_i2.WeatherModel>?>.value())
          as _i4.Future<List<_i2.WeatherModel>?>);
}
